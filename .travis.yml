
addons:
  apt:
    packages:
    - aria2
    #- gnupg
    - gnupg2
    - graphviz
    - openssl
    - whois
before_install:
- whois $(curl ipinfo.io/ip)
- if [ -d /usr/lib/jvm/java-8-oracle ]; then sudo ln -s /usr/lib/jvm/java-8-oracle /usr/lib/jvm/java-8-openjdk; fi
- wget https://github.com/sormuras/bach/raw/master/install-jdk.sh
- bash install-jdk.sh -F 11 --target $HOME/openjdk11 --workspace $HOME/.cache/install-jdk
- if [ -d /home/travis/openjdk11 ]; then sudo mkdir -p /usr/lib/jvm; sudo ln -s /home/travis/openjdk11 /usr/lib/jvm/java-11-openjdk; fi
- export JAVA_HOME=/usr/lib/jvm/java-11-openjdk
- aria2c --file-allocation=none -c -x 10 -s 10 -m 0 --console-log-level=notice --log-level=notice --summary-interval=0 -o apache-maven-3.6.0-bin.zip https://archive.apache.org/dist/maven/maven-3/3.6.0/binaries/apache-maven-3.6.0-bin.zip && unzip -qq apache-maven-3.6.0-bin.zip
- export M2_HOME=$PWD/apache-maven-3.6.0
- export PATH=$M2_HOME/bin:$PATH
branches:
  only:
  #- master # do nothing on master branch
  - develop # snapshots on develop branch
  - /^feature\/.*$/ # build and test on feature branches
  - /^hotfix\/.*$/ # release on hotfix branches
  - /^release\/.*$/ # release on release branches
  - /^support\/.*$/ # release on support branches
  #- /^v\d+\.\d+(\.\d+)?(-\S*)?/ # build and publish a github release (can skip tests here) or do nothing on version tags
cache:
  directories:
  - "$HOME/.cache"
  - "$HOME/.gradle"
  - "$HOME/.m2"
  - "$HOME/.sonar/cache"

dist: trusty
env:
  global:
  - TRAVIS_ENABLED=true
  - CI_INFRA_OPT_GIT_PREFIX=https://github.com
  - CI_OPT_MAVEN_EFFECTIVE_POM=true
  - MAVEN_SKIP_RC=true
group: edge
install: true
jdk:
- oraclejdk8
#- oraclejdk9
language: java
script:
# When prefixed with `travis_wait 30`, no log output until it is done.
# see: https://github.com/travis-ci/travis-ci/issues/4190 or https://github.com/HaxeFoundation/hxcpp/issues/709
- while sleep 9m; do echo "=====[ $SECONDS seconds still running ]====="; done &
- if [[ "${TRAVIS_BRANCH}" =~ ^release/.+ ]] || [[ "${TRAVIS_BRANCH}" =~ ^support/.+ ]]; then export CI_OPT_GITHUB_SITE_PUBLISH=true; else export CI_OPT_GITHUB_SITE_PUBLISH=false; fi;
  if [ "${TRAVIS_ENABLED}" == "true" ]; then
    if [ "${CI_OPT_GITHUB_SITE_PUBLISH}" == "true" ]; then
      bash ci.sh mvn clean install sonar:sonar site deploy site-deploy;
    else
      bash ci.sh mvn clean install sonar:sonar site deploy site:stage site:stage-deploy;
    fi;
  fi
- kill %1
services:
- docker
sudo: required
