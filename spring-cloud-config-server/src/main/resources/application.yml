logging:
  #path: ${LOGGING_PATH:${LOG_PATH:${user.dir}/data/logs/${spring.application.name}}}
  level:
    jndi: ${LOGGING_LEVEL_ROOT:INFO}
    org.springframework.amqp: ${LOGGING_LEVEL_ROOT:INFO}
    org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor: ${LOGGING_LEVEL_ROOT:WARN}
    org.springframework.beans.factory.annotation.InjectionMetadata: ${LOGGING_LEVEL_ROOT:INFO}
    org.springframework.beans.factory.support.DefaultListableBeanFactory: ${LOGGING_LEVEL_ROOT:INFO}
    org.springframework.core.env.MutablePropertySources: ${LOGGING_LEVEL_ROOT:INFO}
    org.springframework.core.env.PropertySourcesPropertyResolver: ${LOGGING_LEVEL_ROOT:INFO}
    org.springframework.core.type.classreading.AnnotationAttributesReadingVisitor: INFO
    org.springframework.context.annotation.AnnotationConfigApplicationContext: ${LOGGING_LEVEL_ROOT:WARN}
    org.springframework.jndi: ${LOGGING_LEVEL_ROOT:INFO}
    org.springframework.web.context.support.StandardServletEnvironment: ${LOGGING_LEVEL_ROOT:INFO}
    org.springframework.security: ${LOGGING_LEVEL_ROOT:INFO}
    root: ${LOGGING_LEVEL_ROOT:DEBUG}

management:
  endpoint:
    shutdown.enabled: ${MANAGEMENT_ENDPOINT_SHUTDOWN_ENABLED:true}
    health:
      show-details: ${MANAGEMENT_ENDPOINT_HEALTH_SHOWDETAILS:WHEN_AUTHORIZED}
      roles: ${MANAGEMENT_ENDPOINT_HEALTH_ROLES:ACTUATOR}
  endpoints:
    web: # since spring-boot 2.x
      base-path: ${MANAGEMENT_ENDPOINTS_WEB_BASEPATH:/actuator} # management.context-path deprecated since spring-boot 2.x
      exposure:
        include: "${MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE:*}"
        exclude: "${MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_EXCLUDE:}"
  #port: # deprecated since spring-boot 2.x
  #security: # deprecated since spring-boot 2.x
  #  enabled: true
  #  roles: ADMIN # no ROLE_ prefix here

# consul needs endpoint.health to check service status,
# set sensitive to false will hide detailed infos but need not to authenticate.
#endpoints.health.sensitive: ${ENDPOINTS_HEALTH_SENSITIVE:false} # deprecated since spring-boot 2.x

server:
  servlet.context-path: ${SERVER_SERVLET_CONTEXTPATH:} # since spring-boot 2.x
  #context-path: ${SERVER_CONTEXTPATH:} # deprecated since spring-boot 2.x
  port: ${SERVER_PORT:8888}

eureka:
  client:
    enabled: ${EUREKA_CLIENT_ENABLED:true}
    service-url:
      defaultZone: ${EUREKA_CLIENT_SERVICEURL_DEFAULTZONE:http://user:user_pass@standalone.eureka:8761/eureka/}
    register-with-eureka: ${EUREKA_CLIENT_REGISTERWITHEUREKA:true}
  instance:
    health-check-url-path: ${MANAGEMENT_ENDPOINTS_WEB_BASEPATH:/actuator}/health
    # eureka.instance.hostname affect Status->instances's url href (not text) value on dashboard
    hostname: ${EUREKA_INSTANCE_HOSTNAME:${SPRING_CLOUD_CLIENT_HOSTNAME:${EUREKA_INSTANCE_IPADDRESS:${HOST_IPADDRESS:${spring.cloud.client.ip-address}}}}}
    lease-renewal-interval-in-seconds: 10
    metadataMap:
      configPath: ${spring.cloud.config.server.prefix}
      applicationId: ${spring.application.name}
      management.context-path: ${management.endpoints.web.base-path:${management.context-path:/actuator}}
      user.name: ${security.user.name:${spring.security.user.name:}}
      user.password: ${security.user.password:${spring.security.user.password:}}
      health.path: "health"
    prefer-ip-address: ${EUREKA_INSTANCE_PREFERIPADDRESS:false}
    status-page-url-path: ${MANAGEMENT_ENDPOINTS_WEB_BASEPATH:/actuator}/info
    # Registering a Secure Application
    #health-check-url: https://${eureka.instance.hostname}/
    #status-page-url: https://${eureka.instance.hostname}/

spring.autoconfigure.exclude:
- org.springframework.cloud.client.serviceregistry.ServiceRegistryAutoConfiguration # spring-boot 1.x and 2.x
- org.springframework.cloud.client.serviceregistry.AutoServiceRegistrationAutoConfiguration # spring-boot 1.x and 2.x

spring:
  boot.admin:
    client:
      enabled: true
      #health-url:
      #management-url:
      metadata:
        user:
          name: ${security.user.name:${spring.security.user.name:}}
          password: ${security.user.password:${spring.security.user.password:}}
      name: ${spring.application.name}
      prefer-ip: false
      #service-base-url:
      #service-url:
  cloud:
    service-registry:
      # see: org.springframework.cloud.client.serviceregistry.AutoServiceRegistrationAutoConfiguration
      auto-registration:
        enabled: ${SPRING_CLOUD_SERVICEREGISTRY_AUTOREGISTRATION_ENABLED:true}
        fail-fast: ${SPRING_CLOUD_SERVICEREGISTRY_AUTOREGISTRATION_FAILFAST:true}
      # custom property
      auto-multi-registration.enabled: ${SPRING_CLOUD_SERVICEREGISTRY_AUTOREGISTRATION_ENABLED:${spring.cloud.service-registry.auto-registration.enabled:true}}

    config:
      # see: org.springframework.cloud.config.monitor.PropertyPathEndpoint
      monitor.endpoint.path: ${SPRING_CLOUD_CONFIG_SERVER_MONITOR_ENDPOINT_PATH:/config}
      discovery:
        enabled: true
        service-id: ${spring.application.name}
      server:
        default-application-name: application
        default-label: ${SPRING_CLOUD_CONFIG_SERVER_DEFAULTLABEL:master}
        default-profile: ${SPRING_CLOUD_CONFIG_SERVER_DEFAULTPROFILE:default}
        encrypt:
          hmac-secret: ${SPRING_CLOUD_CONFIG_SERVER_ENCRYPT_HMACSECRET:secret} # custom property: hmac-secret
          enabled: ${SPRING_CLOUD_CONFIG_SERVER_ENCRYPT_ENABLED:true}
        health.repositories: # default is 'app'
          health-check-repository:
            name: ${SPRING_CLOUD_CONFIG_SERVER_HEALTH_REPOSITORIES_HEALTHCHECKREPOSITORY:health-check}
        git:
          clone-on-start: ${SPRING_CLOUD_CONFIG_SERVER_GIT_CLONEONSTART:false}
          delete-untracked-branches: ${SPRING_CLOUD_CONFIG_SERVER_GIT_DELETEUNTRACKEDBRANCHES:true}
          deploy-key: ${SPRING_CLOUD_CONFIG_SERVER_GIT_DEPLOYKEY:classpath:default-deploy_key} # custom property: deploy-key
          # Property 'spring.cloud.config.server.git.privateKey' must be set when 'spring.cloud.config.server.git.ignoreLocalSshSettings' is specified
          #ignore-local-ssh-settings: ${SPRING_CLOUD_CONFIG_SERVER_GIT_IGNORELOCALSSHSETTINGS:true}
          force-pull: ${SPRING_CLOUD_CONFIG_SERVER_GIT_FORCEPULL:true}
          known-hosts-file: ${SPRING_CLOUD_CONFIG_SERVER_GIT_KNOWNHOSTSFILE:/dev/null}
          parent-support-enabled: ${SPRING_CLOUD_CONFIG_SERVER_GIT_PARENTSUPPORTENABLED:true} # custom property: parent-support-enabled
          search-paths: ${AUTH_CONFIG_SEARCHPATHS:auth-label-{label},auth-profile-{profile}}
          strict-host-key-checking: ${SPRING_CLOUD_CONFIG_SERVER_GIT_STRICTHOSTKEYCHECKING:false}
          timeout: ${SPRING_CLOUD_CONFIG_SERVER_GIT_TIMEOUT:30}
          #uri: ${GIT_PREFIX:ssh://git@gitlab:20022/spring-cloud-config-server}/{application}-config.git
          uri: ${GIT_PREFIX:https://github.com/spring-cloud-config-server}/{application}-config.git
        # see: org.springframework.cloud.config.monitor.EnvironmentMonitorAutoConfiguration
        monitor:
          bitbucket.enabled: ${SPRING_CLOUD_CONFIG_SERVER_MONITOR_BITBUCKET_ENABLED:false}
          github.enabled: ${SPRING_CLOUD_CONFIG_SERVER_MONITOR_GITHUB_ENABLED:false}
          gitlab.enabled: ${SPRING_CLOUD_CONFIG_SERVER_MONITOR_GITLAB_ENABLED:false}
          gitlabrepo.enabled: ${SPRING_CLOUD_CONFIG_SERVER_MONITOR_GITLABREPO_ENABLED:false} # custom property: gitlabrepo.enabled
        prefix: ${SPRING_CLOUD_CONFIG_SERVER_PREFIX:/config}
    consul:
      discovery:
        enabled: ${SPRING_CLOUD_CONSUL_DISCOVERY_ENABLED:true}
        health-check-path: ${SERVER_CONTEXTPATH:${server.servlet.context-path:}}${MANAGEMENT_CONTEXTPATH:${management.endpoints.web.base-path:}}/health
        hostname: ${SPRING_CLOUD_CONSUL_DISCOVERY_HOSTNAME:${EUREKA_INSTANCE_HOSTNAME:${SPRING_CLOUD_CLIENT_HOSTNAME:${EUREKA_INSTANCE_IPADDRESS:${HOST_IPADDRESS:${spring.cloud.client.ip-address}}}}}}
        ip-address: ${SPRING_CLOUD_CONSUL_DISCOVERY_IPADDRESS:${EUREKA_INSTANCE_IPADDRESS:${HOST_IPADDRESS:${spring.cloud.client.ip-address}}}}
        prefer-ip-address: ${SPRING_CLOUD_CONSUL_DISCOVERY_PREFERIPADDRESS:${EUREKA_INSTANCE_PREFERIPADDRESS:true}}
      enabled: ${SPRING_CLOUD_CONSUL_ENABLED:true}

    inetutils:
      preferred-networks: ${SPRING_CLOUD_INETUTILS_IGNOREDINTERFACES:^192\.168\..+, ^172\.30\..+, ^10\..+}
      ignored-interfaces: ${SPRING_CLOUD_INETUTILS_IGNOREDINTERFACES:^[a-z]?tun[0-9]*, ^awdl[0-9]*, ^lo[0-9]*}

  #  rabbitmq:
  #    host: ${SPRING_RABBITMQ_HOST:cloudbus}
  #    port: ${SPRING_RABBITMQ_PORT:5672}
  #    username: ${SPRING_RABBITMQ_USERNAME:user}
  #    password: ${SPRING_RABBITMQ_PASSWORD:user_pass}

  security:
    enabled: ${SPRING_SECURITY_ENABLED:true} # see: https://github.com/spring-projects/spring-boot/issues/12323
    user:
      name: ${SPRING_SECURITY_USER_NAME:admin}
      password: ${SPRING_SECURITY_USER_PASSWORD:admin_pass}
      roles: ${SPRING_SECURITY_USER_ROLES:ACTUATOR, ADMIN, SUPERUSER, USER}
    hook:
      name: ${SPRING_SECURITY_HOOK_NAME:hook}
      password: ${SPRING_SECURITY_HOOK_PASSWORD:hook_pass}


---
spring:
  profiles: port_nonsecure

eureka.instance:
  # eureka.instance.instance-id affect Status->instances's url text (not href) value on dashboard
  instance-id: ${spring.application.name}:${EUREKA_INSTANCE_HOSTNAME:${SPRING_CLOUD_CLIENT_HOSTNAME:${EUREKA_INSTANCE_IPADDRESS:${HOST_IPADDRESS:${spring.cloud.client.ip-address}}}}}:${EUREKA_INSTANCE_NONSECUREPORT:${SERVER_PORT:${server.port}}}
  non-secure-port: ${EUREKA_INSTANCE_NONSECUREPORT:${SERVER_PORT:${server.port}}}
  non-secure-port-enabled: true
  secure-port-enabled: false

#logging:
#  file: ${LOGGING_FILE:${LOG_FILE:${EUREKA_INSTANCE_HOSTNAME:${SPRING_CLOUD_CLIENT_HOSTNAME:${EUREKA_INSTANCE_IPADDRESS:${HOST_IPADDRESS:${spring.cloud.client.ip-address}}}}}-${EUREKA_INSTANCE_NONSECUREPORT:${SERVER_PORT:${server.port}}}}.log}

spring.cloud.consul:
  discovery:
    health-check-url: http://${EUREKA_INSTANCE_HOSTNAME:${SPRING_CLOUD_CLIENT_HOSTNAME:${EUREKA_INSTANCE_IPADDRESS:${HOST_IPADDRESS:${spring.cloud.client.ip-address}}}}}:${EUREKA_INSTANCE_NONSECUREPORT:${SERVER_PORT:${server.port:80}}}${SERVER_CONTEXTPATH:${server.servlet.context-path:}}${MANAGEMENT_CONTEXTPATH:${management.endpoints.web.base-path:}}/health
    # consul's instance-id must start with letters, hostname could be an ip address, so place spring.application.name at first position.
    instance-id: ${spring.application.name}:${SPRING_CLOUD_CONSUL_DISCOVERY_HOSTNAME:${EUREKA_INSTANCE_HOSTNAME:${SPRING_CLOUD_CLIENT_HOSTNAME:${EUREKA_INSTANCE_IPADDRESS:${HOST_IPADDRESS:${spring.cloud.client.ip-address}}}}}}:${EUREKA_INSTANCE_NONSECUREPORT:${SERVER_PORT:${server.port}}}

---
spring:
  profiles: port_secure

eureka.instance:
  # eureka.instance.instance-id affect Status->instances's url text (not href) value on dashboard
  instance-id: ${spring.application.name}:${EUREKA_INSTANCE_HOSTNAME:${SPRING_CLOUD_CLIENT_HOSTNAME:${EUREKA_INSTANCE_IPADDRESS:${HOST_IPADDRESS:${spring.cloud.client.ip-address}}}}}:${EUREKA_INSTANCE_SECUREPORT:${SERVER_PORT:${server.port}}}
  non-secure-port-enabled: false
  secure-port: ${EUREKA_INSTANCE_SECUREPORT:${SERVER_PORT:${server.port}}}
  secure-port-enabled: true

#logging:
#  file: ${LOGGING_FILE:${LOG_FILE:${EUREKA_INSTANCE_HOSTNAME:${SPRING_CLOUD_CLIENT_HOSTNAME:${EUREKA_INSTANCE_IPADDRESS:${HOST_IPADDRESS:${spring.cloud.client.ip-address}}}}}-${EUREKA_INSTANCE_SECUREPORT:${SERVER_PORT:${server.port}}}}.log}

spring.cloud.consul:
  discovery:
    health-check-url: https://${SPRING_CLOUD_CONSUL_DISCOVERY_HOSTNAME:${EUREKA_INSTANCE_HOSTNAME:${SPRING_CLOUD_CLIENT_HOSTNAME:${EUREKA_INSTANCE_IPADDRESS:${HOST_IPADDRESS:${spring.cloud.client.ip-address}}}}}}:${EUREKA_INSTANCE_SECUREPORT:${SERVER_PORT:${server.port}}}${SERVER_CONTEXTPATH:${server.servlet.context-path:}}${MANAGEMENT_CONTEXTPATH:${management.endpoints.web.base-path:}}/health
    # consul's instance-id must start with letters, hostname could be an ip address, so place spring.application.name at first position.
    instance-id: ${spring.application.name}:${SPRING_CLOUD_CONSUL_DISCOVERY_HOSTNAME:${EUREKA_INSTANCE_HOSTNAME:${SPRING_CLOUD_CLIENT_HOSTNAME:${EUREKA_INSTANCE_IPADDRESS:${HOST_IPADDRESS:${spring.cloud.client.ip-address}}}}}}:${EUREKA_INSTANCE_SECUREPORT:${SERVER_PORT:${server.port}}}

---
spring:
  profiles: manual_ip_hostname

eureka.instance:
  hostname: ${EUREKA_INSTANCE_HOSTNAME:${SPRING_CLOUD_CLIENT_HOSTNAME:${EUREKA_INSTANCE_IPADDRESS:${HOST_IPADDRESS:${spring.cloud.client.ip-address}}}}}
  ip-address: ${EUREKA_INSTANCE_IPADDRESS:${HOST_IPADDRESS:${spring.cloud.client.ip-address}}}

spring.cloud:
  client:
    hostname: ${SPRING_CLOUD_CLIENT_HOSTNAME:}
    ip-address: ${SPRING_CLOUD_CLIENT_IPADDRESS:}

---
spring:
  profiles: develop.env

---
spring:
  profiles: it.env

---
spring:
  profiles: staging.env

---
spring:
  profiles: production.env
